# -*- coding: utf-8 -*-
#
# XYalign documentation build configuration file, created by
# sphinx-quickstart on Mon Dec 19 18:09:46 2016.
#
# This file is execfile()d with the current directory set to its
# containing dir.
#
# Note that not all possible configuration values are present in this
# autogenerated file.
#
# All configuration values have a default; values that are commented out
# serve to show the default.

# If extensions (or modules to document with autodoc) are in another directory,
# add these directories to sys.path here. If the directory is relative to the
# documentation root, use os.path.abspath to make it absolute, like shown here.
#
# import os
# import sys
# sys.path.insert(0, os.path.abspath('.'))

import os
import subprocess
import sys
sys.path.append(os.path.abspath('../'))

# Trying to get docs to compile on ReadTheDocs using info from:
#http://blog.rtwilson.com/how-to-make-your-sphinx-documentation-compile-with-readthedocs-when-youre-using-numpy-and-scipy/

# import mock
# MOCK_MODULES = [
# 	'numpy', 'logging', 'pandas', 'pysam', 'time', 'scipy.stats', 'pybedtools',
# 	'matplotlib', 'matplotlib.pyplot']
# for mod_name in MOCK_MODULES:
# 	sys.modules[mod_name] = mock.Mock()

# The below is based on: https://github.com/breedlun/clearplot/blob/master/doc/source/conf.py
#Print imports to the screen so that it is easier to troubleshoot issues
print "python exec:", sys.executable
print "sys.path:", sys.path
try:
    import numpy
    print "numpy: %s, %s" % (numpy.__version__, numpy.__file__)
except ImportError:
    print "no numpy"
try:
    import matplotlib
    print "matplotlib: %s, %s" % (matplotlib.__version__, matplotlib.__file__)
    #For some reason, I have to import matplotlib.pyplot here, or else I get errors that
    #there is no module named 'sip' when ReadTheDocs tries to import matplotlib.pyplot
    #inside of clearplot
    import matplotlib.pyplot
    print "matplotlib.pyplot imported"
except ImportError:
    print "no matplotlib"
try:
    import pysam
    print "pysam: %s, %s" % (pysam.__version__, pysam.__file__)
except ImportError:
    print "no pysam"
try:
    import pybedtools
    print "pybedtools: %s, %s" % (pybedtools.__version__, pybedtools.__file__)
except ImportError:
    print "no pybedtools"

# -- General configuration ------------------------------------------------

# If your documentation needs a minimal Sphinx version, state it here.
#
# needs_sphinx = '1.0'

# Add any Sphinx extension module names here, as strings. They can be
# extensions coming with Sphinx (named 'sphinx.ext.*') or your custom
# ones.
extensions = ['sphinx.ext.autodoc',
    'sphinx.ext.doctest',
    'sphinx.ext.coverage',
    'sphinx.ext.viewcode',
	'sphinx.ext.autosummary',
	'numpydoc']

# From https://github.com/phn/pytpm/issues/3#issuecomment-12133978
numpydoc_show_class_members = False

# Add any paths that contain templates here, relative to this directory.
templates_path = ['_templates']

# The suffix(es) of source filenames.
# You can specify multiple suffix as a list of string:
#
# source_suffix = ['.rst', '.md']
source_suffix = '.rst'

# The master toctree document.
master_doc = 'index'

# General information about the project.
project = u'XYalign'
copyright = u'2016, Tim Webster, Tanya Phung, Madeline Couse, Bruno Grande, Eric Karlins, Phillip Richmond, Whitney Whitford, Melissa Wilson Sayres'
author = u'Tim Webster, Tanya Phung, Madeline Couse, Bruno Grande, Eric Karlins, Phillip Richmond, Whitney Whitford, Melissa Wilson Sayres'

# The version info for the project you're documenting, acts as replacement for
# |version| and |release|, also used in various other places throughout the
# built documents.
#
# The short X.Y version.
version = u'0.0'
# The full version, including alpha/beta/rc tags.
release = u'0.0.1'

# The language for content autogenerated by Sphinx. Refer to documentation
# for a list of supported languages.
#
# This is also used if you do content translation via gettext catalogs.
# Usually you set "language" from the command line for these cases.
language = None

# List of patterns, relative to source directory, that match files and
# directories to ignore when looking for source files.
# This patterns also effect to html_static_path and html_extra_path
exclude_patterns = ['_build', 'Thumbs.db', '.DS_Store']

# The name of the Pygments (syntax highlighting) style to use.
pygments_style = 'sphinx'

# If true, `todo` and `todoList` produce output, else they produce nothing.
todo_include_todos = False


# -- Options for HTML output ----------------------------------------------

# The theme to use for HTML and HTML Help pages.  See the documentation for
# a list of builtin themes.
#

# on_rtd is whether we are on readthedocs.org, this line of code grabbed from docs.readthedocs.org
on_rtd = os.environ.get('READTHEDOCS', None) == 'True'

if not on_rtd:  # only import and set the theme if we're building docs locally
	import sphinx_rtd_theme
	html_theme = 'sphinx_rtd_theme'

# Theme options are theme-specific and customize the look and feel of a theme
# further.  For a list of options available for each theme, see the
# documentation.
#
# html_theme_options = {}

# Add any paths that contain custom static files (such as style sheets) here,
# relative to this directory. They are copied after the builtin static files,
# so a file named "default.css" will overwrite the builtin "default.css".
html_static_path = ['_static']


# -- Options for HTMLHelp output ------------------------------------------

# Output file base name for HTML help builder.
htmlhelp_basename = 'XYaligndoc'


# -- Options for LaTeX output ---------------------------------------------

latex_elements = {
    # The paper size ('letterpaper' or 'a4paper').
    #
    # 'papersize': 'letterpaper',

    # The font size ('10pt', '11pt' or '12pt').
    #
    # 'pointsize': '10pt',

    # Additional stuff for the LaTeX preamble.
    #
    # 'preamble': '',

    # Latex figure (float) alignment
    #
    # 'figure_align': 'htbp',
}

# Grouping the document tree into LaTeX files. List of tuples
# (source start file, target name, title,
#  author, documentclass [howto, manual, or own class]).
latex_documents = [
    (master_doc, 'XYalign.tex', u'XYalign Documentation',
     u'Tim Webster, Tanya Phung, Madeline Couse, Bruno Grande, Eric Karlins, Phillip Richmond, Whitney Whitford, Melissa Wilson Sayres', 'manual'),
]


# -- Options for manual page output ---------------------------------------

# One entry per manual page. List of tuples
# (source start file, name, description, authors, manual section).
man_pages = [
    (master_doc, 'xyalign', u'XYalign Documentation',
     [author], 1)
]


# -- Options for Texinfo output -------------------------------------------

# Grouping the document tree into Texinfo files. List of tuples
# (source start file, target name, title, author,
#  dir menu entry, description, category)
texinfo_documents = [
    (master_doc, 'XYalign', u'XYalign Documentation',
     author, 'XYalign', 'One line description of project.',
     'Miscellaneous'),
]


# # Automate building apidoc when building with readthedocs
# # https://github.com/rtfd/readthedocs.org/issues/1139
# def run_apidoc(_):
#     module = '../xyalign'
#     cur_dir = os.path.abspath(os.path.dirname(__file__))
#     output_path = os.path.join(cur_dir, 'docs', 'apidoc')
#     cmd_path = 'sphinx-apidoc'
#     if hasattr(sys, 'real_prefix'):  # Check to see if we are in a virtualenv
#         # If we are, assemble the path manually
#         cmd_path = os.path.abspath(os.path.join(sys.prefix,
#                                                 'bin', 'sphinx-apidoc'))
#     subprocess.check_call([cmd_path, '-e', '-o',
#                            output_path, module, '--force'])
#
#
# def setup(app):
#     app.connect('builder-inited', run_apidoc)

autodoc_member_order = 'bysource'
